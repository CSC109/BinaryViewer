<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANAAAAkgAAAMkAAADMAAAAqwAA
        ACYAAAAAAAAAAAAAAAAAAAAAAAAAvgAAAMwAAAApAAAAAAAAAAAAAAAAAAAAowAAAMwAAABEAAAAAAAA
        ACcAAACrAAAAzAAAAMkAAACRAAAADQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJIAAAD/AAAA/wAA
        AP8AAAD/AAAA1AAAAAAAAAAAAAAAAAAAAAAAAADuAAAA/wAAADMAAAAAAAAAAAAAAAAAAADMAAAA/wAA
        AFUAAAAAAAAA1gAAAP8AAAD/AAAA/wAAAP8AAACRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyQAA
        AP8AAACNAAAAYAAAAP8AAAD/AAAADgAAAAAAAAAAAAAAAAAAAO4AAAD/AAAAMwAAAAAAAAAAAAAAAAAA
        AMwAAAD/AAAAVQAAAA4AAAD/AAAA/wAAAGAAAACNAAAA/wAAAMkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        EQfgAAEH4GABB+BwgYf///////////////8=
</value>
  </data>
</root>